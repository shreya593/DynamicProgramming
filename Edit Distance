class Solution {
public:
int mn = 0;
int sol(string word1, string word2,int i, int j,vector<vector<int>> &dp){
    if(j==word2.length()){
       return (word1.length()-i);
    }
    if(i==word1.length()){
       return (word2.length()-j);
    }
    if(dp[i][j]!=-1){
      return dp[i][j];
    }
    if(word1[i]==word2[j]){
      return sol(word1,word2,i+1,j+1,dp);
    }
    else{
      int insert = 1 + sol(word1,word2,i,j+1,dp);
      int replace = 1 + sol(word1,word2,i+1,j+1,dp);
      int deelete = 1 + sol(word1,word2,i+1,j,dp);
      mn = min({insert,replace,deelete});
    }
  return dp[i][j] = mn;
}
    int minDistance(string word1, string word2) {
        vector<vector<int>>dp(word1.length()+1,vector<int>(word2.length()+1,-1));
        return sol(word1,word2,0,0,dp);
    }
};
