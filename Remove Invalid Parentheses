Q : https://practice.geeksforgeeks.org/problems/remove-invalid-parentheses/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


class Array
{
public:
    template <class T>
    static void input(vector<T> &A,int n)
    {
        for (int i = 0; i < n; i++)
        {
            cin >> A[i];
        }
    }
 
    template <class T>
    static void print(vector<T> &A)
    {
        for (int i = 0; i < A.size(); i++)
        {
            if(i!=A.size()-1) cout << A[i]<< " ";
            else cout << A[i];
        }
        cout << endl;
    }
};


// } Driver Code Ends
class Solution {
  public:
  set<string> stt;
  void sol(string s, int mr, set<string>&stt){
      if(mr==0){
          if(isvalid(s)==true){
              
              if(stt.empty() || (stt.find(s)==stt.end())){
                 //cout<<s<<" | ";
                stt.insert(s);
              }
          }
          return;
      }
    
      for(int i=0; i<s.length(); i++){
        string l =s.substr(0,i);
        string r =s.substr(i+1);
        //cout<<l+r<<" | ";
        sol(l+r,mr-1,stt);
      }
      
    
  }
  bool isvalid(string s){
      stack<char> st;
      for(int i=0; i<s.length(); i++){
          if(st.empty()){
              st.push(s[i]);
          }
          else if(s[i]=='('){
            st.push(s[i]);
          }
          else if(s[i]==')' && st.top()=='('){
            st.pop();
          }
      }
      if(st.empty()){
          return true;
      }
      return false;
  }
  
  int minRemoval(string s){
      stack<char> st;
      for(int i=0; i<s.length(); i++){
          if(st.empty()){
              st.push(s[i]);
          }
          else if(s[i]=='('){
            st.push(s[i]);
          }
          else if(s[i]==')'){
              if(st.top()=='('){
                  st.pop();
              }
              else{
                  st.push(s[i]);
              }
            
          }
      }
      //cout<<st.size();
      return st.size();
  }
  
    vector<string> removeInvalidParentheses(string s) {
        // code here
       
        int mr = minRemoval(s);
        sol(s,mr,stt);
         
        vector<string> v;
        for(auto x : stt){
          
            v.push_back(x);
        }
        return v;
    }
};


//{ Driver Code Starts.

int main(){
    int t;
    scanf("%d",&t);
    while(t--){
        
        string s; 
        cin>>s;
        
        Solution obj;
        vector<string> res = obj.removeInvalidParentheses(s);
        
        Array::print(res);
        
    }
}

// } Driver Code Ends
