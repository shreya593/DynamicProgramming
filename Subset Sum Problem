//Q2 :  https://practice.geeksforgeeks.org/problems/subset-sum-problem-1611555638/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
//User function template for C++

class Solution{   
public:
int sol(vector<int>arr, int sum, int i,int n,vector<vector<int>>&dp){
    if(i>n){
        return 0;
    }
    if(sum<0){
        return 0;
    }
    if(sum==0){
        return 1;
    }
    if(dp[sum][i]!=-1){
        return dp[sum][i];
    }
    int incl=false,excl=false;
    incl = sol(arr,sum-arr[i],i+1,n,dp);
    excl = sol(arr,sum,i+1,n,dp);
  
  return  dp[sum][i]= incl || excl;
}
    bool isSubsetSum(vector<int>arr, int sum){
        // code here 
        int n = arr.size();
        vector<vector<int>>dp(sum+1,vector<int>(n+1,-1));
       return  sol(arr,sum,0,n,dp);
    }
};

//{ Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int N, sum;
        cin >> N;
        vector<int> arr(N);
        for(int i = 0; i < N; i++){
            cin >> arr[i];
        }
        cin >> sum;
        
        Solution ob;
        cout << ob.isSubsetSum(arr, sum) << endl;
    }
    return 0; 
} 

// } Driver Code Ends
