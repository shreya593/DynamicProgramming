//Q4 : https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article


//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{

  public:
  int mn = INT_MAX;
  int sol(int arr[], int n, int totalsum, int currsum,int i,vector<vector<int>>&dp){
      if(i>n){
         return 0; 
      }
      if(currsum>totalsum){
          return 0;
      }
      if(dp[currsum][i]!=-1){
          return dp[currsum][i];
      }
     int y =  abs(currsum-(totalsum-currsum));
     
      mn = min(mn,y);
      dp[currsum][i] = mn;
     sol(arr,n,totalsum,currsum+arr[i],i+1,dp);
     sol(arr,n,totalsum,currsum,i+1,dp);
     return mn;
  }
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    int sum =0;
	    
	    for(int i=0; i<n; i++){
	        sum = sum + arr[i];
	    }
	    vector<vector<int>>dp(sum+1,vector<int>(n+1,-1));
	   return sol(arr,n,sum,0,0,dp);
	} 
};


//{ Driver Code Starts.
int main() 
{
   
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.minDifference(a, n) << "\n";
	     
    }
    return 0;
}
// } Driver Code Ends
